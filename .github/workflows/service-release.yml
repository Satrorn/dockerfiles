name: 编译并上传镜像

# 设置触发条件
on:
  # 仓库触发工作流
  #repository_dispatch:
  # 编辑文件触发开始编译
  #push:
  #  paths:
  #    - 'Dockerfile'
  # 手动触发工作流
  workflow_dispatch:
    inputs:
      project:
        description: 'project'
        required: true
      # 定时请填写default参数
        default: ''
      tag:
        description: 'tag'
        required: true
      # 定时请填写default参数
        default: 'latest'
  # 定时触发编译(每天早5点)
  #schedule:
  #   - cron: '0 21 * * *'
  # 点☆Star触发开始编译
  #watch:  
  #  types: [started]
   
 # 任务集
jobs:
  build:
    # 选择虚拟环境
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    strategy:
      fail-fast: false
      matrix:
        include:
          - DOCKER_TAG: latest
   
    # 运行步骤
    steps:
    
    # 检出master分支
      - name: 检出各个模块代码
        uses: actions/checkout@v2.3.5
        with:
          fetch-depth: 0

      - name: 安装 QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: 安装 docker buildx
        uses: docker/setup-buildx-action@v2.0.0
        with:
          version: latest

      - name: 日期版本号
        id: tag
        run: |
          if [[ -n $(cat ${{ github.event.inputs.project }}/Dockerfile | awk '{if($1~"ENV" && $2=="VERSION")print $3}') ]]; then
            VERSION=$(cat ${{ github.event.inputs.project }}/Dockerfile | awk '{if($1~"ENV" && $2=="VERSION")print $3}')
            echo "tag=$VERSION" >> $GITHUB_ENV
          else
            echo "tag=$(date +%Y)$(date +%m)$(date +%d)" >> $GITHUB_ENV
          fi

      - name: 登陆主站
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 上传至主站
        uses: docker/build-push-action@v3.0.0
        with:
          context: ${{ github.event.inputs.project }}
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64,linux/38,linux/arm/v6,linux/arm/v7,linux/arm64/v8
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ github.event.inputs.project }}:${{ matrix.DOCKER_TAG }}
            ${{ secrets.DOCKER_USERNAME }}/${{ github.event.inputs.project }}:${{ github.event.inputs.tag }}
          # 根据需要注释
          # ${{ secrets.DOCKER_USERNAME }}/${{ github.event.inputs.project }}:${{ env.tag }}

      - name: 同步README.md
        uses: ms-jpq/sync-dockerhub-readme@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ secrets.DOCKER_USERNAME }}/${{ github.event.inputs.project }}
          readme: "${{ github.event.inputs.project }}/README.md"

      - name: 上传至阿里云
        id: buildAndPushImage
        uses: risfeng/docker-image-build-push-action@v1.0
        with:
          registry_url: '${{ secrets.ALIYUN_REGISTRY }}'
          namespaces: '${{ secrets.ALIYUN_PROJECT_NAME }}'
          repository_name: '${{ github.event.inputs.name }}'
          username: ${{ secrets.ALIYUN_USERNAME }}
          password: ${{ secrets.ALIYUN_PASSWORD }}
          image_version: ${{ matrix.DOCKER_TAG }}
          docker_file: './Dockerfile'

      - name: 删除旧的 Workflow
        uses: Mattraks/delete-workflow-runs@main 
        with:
          repository: ${{ github.repository }}
          retain_days: 1
          keep_minimum_runs: 2   # 保留多少个workflow不删除
